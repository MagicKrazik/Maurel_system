# Generated by Django 5.1.1 on 2024-09-26 11:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import website.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('apartment_number', models.CharField(max_length=7, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('is_first_login', models.BooleanField(default=True)),
                ('is_debtor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apartment_number', models.CharField(max_length=10)),
                ('type', models.CharField(choices=[('queja', 'Queja'), ('sugerencia', 'Sugerencia')], max_length=10)),
                ('category', models.CharField(choices=[('mantenimiento', 'Mantenimiento'), ('seguridad', 'Seguridad'), ('ruido', 'Ruido'), ('limpieza', 'Limpieza'), ('estacionamiento', 'Estacionamiento'), ('otro', 'Otro')], max_length=20)),
                ('description', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='qys_attachments/')),
                ('status', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_progreso', 'En Progreso'), ('atendido', 'Atendido')], default='pendiente', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attended_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('document_type', models.CharField(choices=[('mantenimiento', 'Mantenimiento y Cotizaciones'), ('minutas', 'Minutas'), ('reglamentos', 'Reglamentos'), ('otros', 'Otros')], max_length=50)),
                ('file', models.FileField(upload_to='documents/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expense_date', models.DateField()),
                ('payment_method', models.CharField(choices=[('transfer', 'Transferencia Bancaria'), ('cash', 'Efectivo'), ('debit_card', 'Tarjeta de Débito'), ('credit_card', 'Tarjeta de Crédito')], max_length=50)),
                ('expense_concept', models.CharField(max_length=255)),
                ('comments', models.TextField(blank=True, null=True)),
                ('proof_of_expense', models.FileField(upload_to='expense_reports/')),
                ('report_file', models.FileField(upload_to='documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expense Report',
                'verbose_name_plural': 'Expense Reports',
                'ordering': ['-expense_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('payment_method', models.CharField(choices=[('transfer', 'Transferencia Bancaria'), ('deposit', 'Depósito Bancario')], max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('proof_of_payment', models.ImageField(upload_to=website.models.proof_of_payment_path)),
                ('report_file', models.FileField(upload_to='documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Report',
                'verbose_name_plural': 'Payment Reports',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('gas_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maintenance_fee', models.DecimalField(decimal_places=2, default=1200, max_digits=10)),
                ('parking_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('extra_fee', models.DecimalField(decimal_places=2, default=500, max_digits=10)),
                ('past_due', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_fees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'month')},
            },
        ),
    ]
